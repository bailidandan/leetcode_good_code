Map<String, String> phone = new HashMap<String, String>() {
		{
			put("2", "abc");
			put("3", "def");
			put("4", "ghi");
			put("5", "jkl");
			put("6", "mno");
			put("7", "pqrs");
			put("8", "tuv");
			put("9", "wxyz");
		}
	};
	List<String> ls = new ArrayList();

	public List<String> letterCombinations(String digits) {
		if ("".equals(digits) || null == digits) {
			return ls;
		}
		//回溯法
		recurs(digits, 0, "");
		return ls;
	}

	private void recurs(String digits, int i, String s) {
		if (i == digits.length()) {
			ls.add(s);
			return;
		}
		String cr = phone.get(String.valueOf(digits.charAt(i)));
		String str = "";
		for (int j = 0; j < cr.length(); j++) {
			recurs(digits, i + 1, s + cr.charAt(j));
		}
		return;
	}
